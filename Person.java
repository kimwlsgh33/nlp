package com.example.demo.nlp;
import com.example.demo.nlp.emotion.Emotion;
import com.example.demo.nlp.expression.Expression;
import com.example.demo.nlp.objects.Food;
import lombok.Setter;

import java.util.List;

// 모든 사람들의 특징
@Setter
public class Person {
    // 자주 바뀌지 않는 속성
    // 생존 여부 ( default : true )
    private boolean alive = true;
    // 만족 기준치
    private int satisfactionThreshold;


    // 상시 바뀌는 속성
    // 에너지 ( default : 100 )
    private int energy = 100;
    // 현재 감정 - 한순간에 하나의 감정만 가질 수 있음 ? (여러 감정이 동시에 느껴질 수 있음)
    private List<Emotion> feel;
    // 현재 감각 -
    private List<Expression> sense;
    // 만족도
    private int satisfaction;


    // 가치관
    private Values values;

    //==================================================================================================
    // 태어나면 주어지는 것, 반복하는 것
    //==================================================================================================
    public Person(){
        // 초기화
        this.values = new Values(); // 가치관

        // 살아있는 동안 무한 루프
        while(alive) {
            // 감각이 느껴짐
            // 에너지를 소모함
            this.energy -= 1;
            // 에너지가 떨어지면 죽음
            if(this.energy <= 0) {
                this.alive = false;
            }
        }

    }
    //==================================================================================================
    // 먹는다.
    //==================================================================================================
    public void eat(Food food){
        // 에너지 찰때까지 먹는다.
        while(this.energy < 100){
            // 에너지를 먹은 만큼 증가시킨다.
            this.energy += food.getCalorie();
            // 만족도를 먹은 만큼 증가시킨다.
            this.satisfaction += food.getCalorie();
        }
    }

    //==================================================================================================
    // 감각을 느낌 ( 경험 )
    //==================================================================================================
    void experience(Expression exp){
        // 자기만의 방식으로 해석함
//        Expression filtered = values.getValue(exp);
        // 해석한 내용으로 가치관을 형성함
//        values.add(filtered);
    }

    //==================================================================================================
    // 감각을 느끼면, 무언가 생각이 남
    //==================================================================================================
    void thinking(Expression exp) {
        // 무언가 생각함
//        return values.getValue();
    }

    //==================================================================================================
    // 기존 가치관 버림, 새로운 가치관 생성
    //==================================================================================================
    void deleteData(int prev, Values next){
//        values[prev].remove();
//        values[prev] = next;
    }

    //==================================================================================================
    // 가치관에 따라 행동함
    //==================================================================================================
    void doing(){
//        Action act = find(exp);
//        return act;
    }

    //==================================================================================================
    // 만족감을 느낌
    //==================================================================================================
    void satisfaction(){
        // 만족감을 느낌
        this.satisfaction++;
        // 만족감이 기준치를 넘으면, 새로운 가치관을 형성함
        if(this.satisfaction > this.satisfactionThreshold) {
            // 새로운 가치관을 형성함
            Values newValues = new Values();
            // 기존 가치관을 버리고, 새로운 가치관을 생성함
            deleteData(this.satisfaction, newValues);
        }
    }

    //==================================================================================================
    // 남탓을 함
    //==================================================================================================
    void blame(Person person){
        // 남탓을 함
    }

    //==================================================================================================
    // 자기탓을 함
    //==================================================================================================
    void selfBlame(){
        // 자기탓을 함
    }

    //==================================================================================================
    // 문제를
}
